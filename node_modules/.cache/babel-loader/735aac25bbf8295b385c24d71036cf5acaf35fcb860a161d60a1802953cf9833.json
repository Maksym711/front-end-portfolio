{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gold\\\\Desktop\\\\projects\\\\test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport ThemeContext from './helper/ThemeContext';\nimport Header from './Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isThemeLight, setIsThemeLight] = useState(localStorage.getItem(\"\") || true);\n  const switchTheme = () => {\n    setIsThemeLight(prevTheme => {\n      const newTheme = !prevTheme;\n      localStorage.setItem(\"themeLight\", JSON.stringify(newTheme));\n      return newTheme;\n    });\n  };\n  console.log(isThemeLight);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isThemeLight,\n      switchTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isThemeLight ? 'app light' : 'app black',\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3ngXmSDqIjU0V6MzbNZTrFEan00=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ThemeContext","Header","jsxDEV","_jsxDEV","App","_s","isThemeLight","setIsThemeLight","localStorage","getItem","switchTheme","prevTheme","newTheme","setItem","JSON","stringify","console","log","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Gold/Desktop/projects/test/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport ThemeContext from './helper/ThemeContext';\nimport Header from './Header/Header';\n\nfunction App() {\n\n  const [isThemeLight, setIsThemeLight] = useState(localStorage.getItem(\"\") || true)\n\n  const switchTheme = () => {\n    setIsThemeLight(prevTheme => {\n      const newTheme = !prevTheme\n      localStorage.setItem(\"themeLight\", JSON.stringify(newTheme))\n      return newTheme\n    })\n  }\n\n  console.log(isThemeLight)\n\n  return (\n    <ThemeContext.Provider value={{isThemeLight, switchTheme}}>\n      <div className={isThemeLight ? 'app light' : 'app black'}>\n        <Header />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,YAAY,MAAM,uBAAuB;AAChD,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAACS,YAAY,CAACC,OAAO,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC;EAElF,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBH,eAAe,CAACI,SAAS,IAAI;MAC3B,MAAMC,QAAQ,GAAG,CAACD,SAAS;MAC3BH,YAAY,CAACK,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;MAC5D,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAEDI,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;EAEzB,oBACEH,OAAA,CAACH,YAAY,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAACb,YAAY;MAAEI;IAAW,CAAE;IAAAU,QAAA,eACxDjB,OAAA;MAAKkB,SAAS,EAAEf,YAAY,GAAG,WAAW,GAAG,WAAY;MAAAc,QAAA,eACvDjB,OAAA,CAACF,MAAM;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE5B;AAACpB,EAAA,CArBQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}